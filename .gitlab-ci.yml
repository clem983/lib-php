
stages:
  - lint
  - test


variables:
  ATOUM_COVERAGE_FILENAME: coverage.xml
  ATOUM_XUNIT_FILENAME: xunit.xml
  DOCKER_REGISTRY: wearestancer
  PHP_BUILD_FILENAME: "lib-php-${CI_COMMIT_TAG}.tar.gz"


workflow:
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - when: always


.php::base:
  image: ${DOCKER_REGISTRY}/php:$VERSION

  before_script:
    - php -v
    - composer --version
    - composer install --no-progress

  cache:
    key:
      files:
        - composer.json
    paths:
      - vendor/


.php::all-versions:
  extends:
    - .php::base

  parallel:
    matrix:
        - VERSION:
          - '8.1'
          - '8.2'
          - '8.3'
          - '8.4'

  rules:
    - if: '"$VERSION" == "8.4"'
      allow_failure: true
    - when: on_success


.php::stable-version:
  extends:
    - .php::base

  variables:
    VERSION: '8.1'


atoum:
  extends:
    - .php::all-versions

  stage: test

  script:
    - composer run test -- --max-children-number 1

  coverage: '/Code coverage value: \d+\.\d+%/'

  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: $ATOUM_COVERAGE_FILENAME
      junit: $ATOUM_XUNIT_FILENAME


php-cs-fixer:
  extends:
    - .php::stable-version

  stage: lint

  script:
    - composer run php-cs-check || true
    # We want to check for method chaining indentation but only in source we use a custom rule in test.
    - composer run php-cs-check -- --rules=method_chaining_indentation ./src
    - composer run php-cs-check -- --format=gitlab > codequality.json

  artifacts:
    reports:
      codequality: codequality.json


phpstan:
  extends:
    - .php::stable-version

  stage: lint

  script:
    - composer run phpstan || true
    - composer run phpstan -- --error-format=gitlab > codequality.json

  artifacts:
    reports:
      codequality: codequality.json
